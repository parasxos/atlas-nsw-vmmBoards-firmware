#
# Vivado (TM) v2016.2 (64-bit)
#
# build_mmfe8.tcl: Tcl script for re-creating project 'MMFE8'
#
# Generated by Vivado on Tue Jul 26 14:47:32 CEST 2016
# IP Build 1577682 on Fri Jun  3 12:00:54 MDT 2016
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************
# NOTE: In order to use this script for source control purposes, please make sure that the
#       following files are added to the source control system:-
#
# 1. This project restoration tcl script (fifo_splitter.tcl) that was generated.
#
# 2. The following source(s) files that were local or imported into the original project.
#    (Please see the '$orig_proj_dir' and '$origin_dir' variable setting below at the start of the script)
#
#    <none>
#
# 
#
#*****************************************************************************************
#################################  README FIRST ##########################################
#*****************************************************************************************
#
# This generic .tcl script points to the source files needed to re-create the project
# 'MMFE8'. The user may change the project name at the #Set project name
#  field as he wishes. (e.g. set projectname "myproject"). 
#
# In order to execute the tcl script and build the project, run Vivado and go to: 
# Tools -> Run Tcl Script...
#
# An alternative way would be to open a terminal, and run this command:
# vivado -mode batch -source <PATH>/build_mmfe8.tcl
#
# For more info on how to make further changes to the script, see: 
# http://xillybus.com/tutorials/vivado-version-control-packaging
# 
#*****************************************************************************************
##########################-Christos Bakalis, christos.bakalis@cern.ch-####################
#*****************************************************************************************
# Set part type
set thepart "xc7a200tfbg484-2"

# Set project name
set projectname "MMFE8"

# Set the reference directory for source file relative paths (by default the value is script directory path)
set origin_dir [file dirname [info script]]

# Create project
create_project $projectname $origin_dir/$projectname 



## Use origin directory path location variable, if specified in the tcl shell
#if { [info exists ::origin_dir_loc] } {
#  set origin_dir $::origin_dir_loc
#}

variable script_file
set script_file "build_mmfe8.tcl"

# Help information for this script
proc help {} {
  variable script_file
  puts "\nDescription:"
  puts "Recreate a Vivado project from this script. The created project will be"
  puts "functionally equivalent to the original project for which this script was"
  puts "generated. The script contains commands for creating a project, filesets,"
  puts "runs, adding/importing sources and setting properties on various objects.\n"
  puts "Syntax:"
  puts "$script_file"
  puts "$script_file -tclargs \[--origin_dir <path>\]"
  puts "$script_file -tclargs \[--help\]\n"
  puts "Usage:"
  puts "Name                   Description"
  puts "-------------------------------------------------------------------------"
  puts "\[--origin_dir <path>\]  Determine source file paths wrt this path. Default"
  puts "                       origin_dir path value is \".\", otherwise, the value"
  puts "                       that was set with the \"-paths_relative_to\" switch"
  puts "                       when this script was generated.\n"
  puts "\[--help\]               Print help information for this script"
  puts "-------------------------------------------------------------------------\n"
  exit 0
}

if { $::argc > 0 } {
  for {set i 0} {$i < [llength $::argc]} {incr i} {
    set option [string trim [lindex $::argv $i]]
    switch -regexp -- $option {
      "--origin_dir" { incr i; set origin_dir [lindex $::argv $i] }
      "--help"       { help }
      default {
        if { [regexp {^-} $option] } {
          puts "ERROR: Unknown option '$option' specified, please type '$script_file -tclargs --help' for usage info.\n"
          return 1
        }
      }
    }
  }
}

# Set the directory path for the original project from where this script was exported
set orig_proj_dir "[file normalize "$origin_dir"]"

# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]

# Reconstruct message rules
# None

# Set project properties
set obj [get_projects $projectname]
set_property "default_lib" "xil_defaultlib" $obj
set_property "generate_ip_upgrade_log" "0" $obj
set_property "part" $thepart $obj
set_property "sim.ip.auto_export_scripts" "1" $obj
set_property "simulator_language" "VHDL" $obj
set_property "target_language" "VHDL" $obj
set_property "xpm_libraries" "XPM_CDC XPM_MEMORY" $obj

# # Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

# Set 'sources_1' fileset object
# set obj [get_filesets sources_1]
set obj [get_filesets sources_1]   
set files [list \
 "[file normalize "$origin_dir/sources_1/mmfe8_top.vhd"]"\
 "[file normalize "$origin_dir/sources_1/configuration/udp_data_in_handler.vhd"]"\
 "[file normalize "$origin_dir/sources_1/configuration/fpga_config_block.vhd"]"\
 "[file normalize "$origin_dir/sources_1/configuration/vmm_config_block.vhd"]"\
 "[file normalize "$origin_dir/sources_1/configuration/select_vmm.vhd"]"\
 "[file normalize "$origin_dir/sources_1/configuration/axi_quad_top.vhd"]"\
 "[file normalize "$origin_dir/sources_1/imports/arp_REQ.vhd"]"\
 "[file normalize "$origin_dir/sources_1/imports/arp.vhd"]"\
 "[file normalize "$origin_dir/sources_1/imports/arp_RX.vhd"]"\
 "[file normalize "$origin_dir/sources_1/imports/axi.vhd"]"\
 "[file normalize "$origin_dir/sources_1/imports/temac_10_100_1000_config_vector_sm.vhd"]"\
 "[file normalize "$origin_dir/sources_1/imports/arp_STORE_br.vhd"]"\
 "[file normalize "$origin_dir/sources_1/imports/IP_complete_nomac.vhd"]"\
 "[file normalize "$origin_dir/sources_1/imports/tx_arbitrator.vhd"]"\
 "[file normalize "$origin_dir/sources_1/imports/arp_SYNC.vhd"]"\
 "[file normalize "$origin_dir/sources_1/imports/IPv4_RX.vhd"]"\
 "[file normalize "$origin_dir/sources_1/imports/UDP_Complete_nomac.vhd"]"\
 "[file normalize "$origin_dir/sources_1/imports/arp_SYNC.vhd"]"\
 "[file normalize "$origin_dir/sources_1/imports/arp_TX.vhd"]"\
 "[file normalize "$origin_dir/sources_1/imports/IPv4_TX.vhd"]"\
 "[file normalize "$origin_dir/sources_1/imports/UDP_RX.vhd"]"\
 "[file normalize "$origin_dir/sources_1/imports/arp_types.vhd"]"\
 "[file normalize "$origin_dir/sources_1/imports/ipv4_types.vhd"]"\
 "[file normalize "$origin_dir/sources_1/imports/UDP_TX.vhd"]"\
 "[file normalize "$origin_dir/sources_1/imports/arpv2.vhd"]"\
 "[file normalize "$origin_dir/sources_1/imports/IPv4.vhd"]"\
 "[file normalize "$origin_dir/sources_1/imports/vmm_global_reset.vhd"]"\
 "[file normalize "$origin_dir/sources_1/imports/sgmii_10_100_1000/ipcore_dir/i2c_top.vhd"]"\
 "[file normalize "$origin_dir/sources_1/imports/sgmii_10_100_1000/ipcore_dir/temac_10_100_1000/example_design/temac_10_100_1000_fifo_block.vhd"]"\
 "[file normalize "$origin_dir/sources_1/imports/sgmii_10_100_1000/ipcore_dir/temac_10_100_1000/example_design/temac_10_100_1000_block.vhd"]"\
 "[file normalize "$origin_dir/sources_1/imports/sgmii_10_100_1000/ipcore_dir/temac_10_100_1000/example_design/axi_ipif/temac_10_100_1000_ipif_pkg.vhd"]"\
 "[file normalize "$origin_dir/sources_1/imports/sgmii_10_100_1000/ipcore_dir/temac_10_100_1000/example_design/fifo/temac_10_100_1000_rx_client_fifo.vhd"]"\
 "[file normalize "$origin_dir/sources_1/imports/sgmii_10_100_1000/ipcore_dir/temac_10_100_1000/example_design/fifo/temac_10_100_1000_tx_client_fifo.vhd"]"\
 "[file normalize "$origin_dir/sources_1/imports/sgmii_10_100_1000/ipcore_dir/temac_10_100_1000/example_design/fifo/temac_10_100_1000_ten_100_1g_eth_fifo.vhd"]"\
 "[file normalize "$origin_dir/sources_1/imports/sgmii_10_100_1000/ipcore_dir/temac_10_100_1000/example_design/common/temac_10_100_1000_reset_sync.vhd"]"\
 "[file normalize "$origin_dir/sources_1/imports/sgmii_10_100_1000/ipcore_dir/temac_10_100_1000/example_design/common/temac_10_100_1000_sync_block.vhd"]"\
 "[file normalize "$origin_dir/sources_1/imports/CDCC.vhd"]"\
 "[file normalize "$origin_dir/sources_1/ip/clk_wiz_0.xcix"]"\
 "[file normalize "$origin_dir/sources_1/ip/ila_0_1.xcix"]"\
 "[file normalize "$origin_dir/sources_1/ip/ila_user_FIFO.xcix"]"\
 "[file normalize "$origin_dir/sources_1/ip/clk_wiz_200_to_400.xcix"]"\
 "[file normalize "$origin_dir/sources_1/ip/ila_pf.xcix"]"\
 "[file normalize "$origin_dir/sources_1/ip/readout_fifo.xcix"]"\
 "[file normalize "$origin_dir/sources_1/ip/clk_wiz_low_jitter.xcix"]"\
 "[file normalize "$origin_dir/sources_1/ip/ila_readout.xcix"]"\
 "[file normalize "$origin_dir/sources_1/ip/temac_10_100_1000.xcix"]"\
 "[file normalize "$origin_dir/sources_1/ip/gig_ethernet_pcs_pma_0.xcix"]"\
 "[file normalize "$origin_dir/sources_1/ip/ila_top_level.xcix"]"\
 "[file normalize "$origin_dir/sources_1/ip/packet_len_fifo.xcix"]"\
 "[file normalize "$origin_dir/sources_1/ip/xadc_wiz_0.xcix"]"\
 "[file normalize "$origin_dir/sources_1/ip/vmm_conf_buffer.xcix"]"\
 "[file normalize "$origin_dir/sources_1/ip/ila_1.xcix"]"\
 "[file normalize "$origin_dir/sources_1/ip/vio_0.xcix"]"\
 "[file normalize "$origin_dir/sources_1/ip/ila_spi_flash.xcix"]"\
 "[file normalize "$origin_dir/sources_1/ip/axi_quad_spi_0.xcix"]"\
 "[file normalize "$origin_dir/sources_1/readout/event_timing_reset.vhd"]"\
 "[file normalize "$origin_dir/sources_1/readout/FIFO2UDP.vhd"]"\
 "[file normalize "$origin_dir/sources_1/readout/trigger.vhd"]"\
 "[file normalize "$origin_dir/sources_1/parallel_readout/conf_xadc_mux.vhd"]"\
 "[file normalize "$origin_dir/sources_1/parallel_readout/dout_mux.vhd"]"\
 "[file normalize "$origin_dir/sources_1/parallel_readout/packet_formation_ram.vhd"]"\
 "[file normalize "$origin_dir/sources_1/parallel_readout/RAM2UDP.vhd"]"\
 "[file normalize "$origin_dir/sources_1/parallel_readout/udp_mux.vhd"]"\
 "[file normalize "$origin_dir/sources_1/parallel_readout/vmm_driver.vhd"]"\
 "[file normalize "$origin_dir/sources_1/parallel_readout/VMM_parallel_top_wrapper.vhd"]"\
 "[file normalize "$origin_dir/sources_1/parallel_readout/vmm_readout_0.vhd"]"\
 "[file normalize "$origin_dir/sources_1/parallel_readout/vmm_readout_1.vhd"]"\
 "[file normalize "$origin_dir/sources_1/parallel_readout/vmm_readout_2.vhd"]"\
 "[file normalize "$origin_dir/sources_1/parallel_readout/vmm_readout_3.vhd"]"\
 "[file normalize "$origin_dir/sources_1/parallel_readout/vmm_readout_4.vhd"]"\
 "[file normalize "$origin_dir/sources_1/parallel_readout/vmm_readout_5.vhd"]"\
 "[file normalize "$origin_dir/sources_1/parallel_readout/vmm_readout_6.vhd"]"\
 "[file normalize "$origin_dir/sources_1/parallel_readout/vmm_readout_7.vhd"]"\
 "[file normalize "$origin_dir/sources_1/xadc/xadc.v"]"\
 "[file normalize "$origin_dir/sources_1/xadc/xadc_read.v"]"\
]

add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset file properties for remote files
set file "$origin_dir/sources_1/mmfe8_top.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/sources_1/configuration/udp_data_in_handler.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/sources_1/configuration/fpga_config_block.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/sources_1/configuration/vmm_config_block.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/sources_1/configuration/axi_quad_top.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/sources_1/configuration/select_vmm.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/sources_1/imports/arp_REQ.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/sources_1/imports/arp.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/sources_1/imports/arp_RX.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/sources_1/imports/axi.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/sources_1/imports/temac_10_100_1000_config_vector_sm.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/sources_1/imports/arp_STORE_br.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/sources_1/imports/IP_complete_nomac.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/sources_1/imports/tx_arbitrator.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/sources_1/imports/arp_SYNC.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/sources_1/imports/IPv4_RX.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/sources_1/imports/UDP_Complete_nomac.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/sources_1/imports/arp_SYNC.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/sources_1/imports/arp_TX.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/sources_1/imports/IPv4_TX.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/sources_1/imports/UDP_RX.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/sources_1/imports/arp_types.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/sources_1/imports/ipv4_types.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/sources_1/imports/UDP_TX.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/sources_1/imports/arpv2.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/sources_1/imports/IPv4.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/sources_1/imports/vmm_global_reset.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/sources_1/imports/sgmii_10_100_1000/ipcore_dir/i2c_top.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/sources_1/imports/sgmii_10_100_1000/ipcore_dir/temac_10_100_1000/example_design/temac_10_100_1000_fifo_block.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/sources_1/imports/sgmii_10_100_1000/ipcore_dir/temac_10_100_1000/example_design/temac_10_100_1000_block.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/sources_1/imports/sgmii_10_100_1000/ipcore_dir/temac_10_100_1000/example_design/axi_ipif/temac_10_100_1000_ipif_pkg.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/sources_1/imports/sgmii_10_100_1000/ipcore_dir/temac_10_100_1000/example_design/fifo/temac_10_100_1000_rx_client_fifo.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/sources_1/imports/sgmii_10_100_1000/ipcore_dir/temac_10_100_1000/example_design/fifo/temac_10_100_1000_tx_client_fifo.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/sources_1/imports/sgmii_10_100_1000/ipcore_dir/temac_10_100_1000/example_design/fifo/temac_10_100_1000_ten_100_1g_eth_fifo.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/sources_1/imports/sgmii_10_100_1000/ipcore_dir/temac_10_100_1000/example_design/common/temac_10_100_1000_reset_sync.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/sources_1/imports/sgmii_10_100_1000/ipcore_dir/temac_10_100_1000/example_design/common/temac_10_100_1000_sync_block.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/sources_1/imports/CDCC.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/sources_1/readout/event_timing_reset.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/sources_1/readout/FIFO2UDP.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/sources_1/readout/trigger.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/sources_1/parallel_readout/conf_xadc_mux.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/sources_1/parallel_readout/dout_mux.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/sources_1/parallel_readout/packet_formation_ram.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/sources_1/parallel_readout/RAM2UDP.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/sources_1/parallel_readout/udp_mux.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/sources_1/parallel_readout/vmm_driver.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/sources_1/parallel_readout/VMM_parallel_top_wrapper.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/sources_1/parallel_readout/vmm_readout_0.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/sources_1/parallel_readout/vmm_readout_1.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/sources_1/parallel_readout/vmm_readout_2.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/sources_1/parallel_readout/vmm_readout_3.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/sources_1/parallel_readout/vmm_readout_4.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/sources_1/parallel_readout/vmm_readout_5.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/sources_1/parallel_readout/vmm_readout_6.vhd"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "VHDL" $file_obj

set file "$origin_dir/sources_1/parallel_readout/vmm_readout_7.vhd"
set file "$origin_dir/sources_1/xadc/xadc.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "verilog" $file_obj

set file "$origin_dir/sources_1/xadc/xadc_read.v"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property "file_type" "verilog" $file_obj


# Set 'sources_1' fileset file properties for local files
# None

# Set 'sources_1' fileset properties
set obj [get_filesets sources_1]
set_property "top" "mmfe8_top" $obj

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 "[file normalize "$origin_dir/sources_1/ip/clk_wiz_0.xcix"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 "[file normalize "$origin_dir/sources_1/ip/ila_0_1.xcix"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 "[file normalize "$origin_dir/sources_1/ip/ila_user_FIFO.xcix"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 "[file normalize "$origin_dir/sources_1/ip/clk_wiz_200_to_400.xcix"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 "[file normalize "$origin_dir/sources_1/ip/clk_wiz_low_jitter.xcix"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 "[file normalize "$origin_dir/sources_1/ip/ila_readout.xcix"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 "[file normalize "$origin_dir/sources_1/ip/temac_10_100_1000.xcix"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 "[file normalize "$origin_dir/sources_1/ip/gig_ethernet_pcs_pma_0.xcix"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 "[file normalize "$origin_dir/sources_1/ip/ila_top_level.xcix"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 "[file normalize "$origin_dir/sources_1/ip/packet_len_fifo.xcix"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 "[file normalize "$origin_dir/sources_1/ip/xadc_wiz_0.xcix"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 "[file normalize "$origin_dir/sources_1/ip/ila_1.xcix"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 "[file normalize "$origin_dir/sources_1/ip/vio_0.xcix"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 "[file normalize "$origin_dir/sources_1/ip/axi_quad_spi_0.xcix"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 "[file normalize "$origin_dir/sources_1/ip/ila_spi_flash.xcix"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 "[file normalize "$origin_dir/sources_1/ip/conf_xadc_fifo.xcix"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 "[file normalize "$origin_dir/sources_1/ip/data_ram.xcix"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 "[file normalize "$origin_dir/sources_1/ip/ila_para_readout_wrapper.xcix"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 "[file normalize "$origin_dir/sources_1/ip/vmm_temp_buffer.xcix"]"\
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
# None

# Create 'constrs_1' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

# Set 'constrs_1' fileset object
set obj [get_filesets constrs_1]

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/constrs_1/mmfe8_constr.xdc"]"
set file_added [add_files -norecurse -fileset $obj $file]
set file "$origin_dir/constrs_1/mmfe8_constr.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property "file_type" "XDC" $file_obj

# Set 'constrs_1' fileset properties
set obj [get_filesets constrs_1]

# Create 'sim_1' fileset (if not found)
if {[string equal [get_filesets -quiet sim_1] ""]} {
  create_fileset -simset sim_1
}

# # Set 'sim_1' fileset object
# set obj [get_filesets sim_1]
# set files [list \
#  "[file normalize "$origin_dir/sims/packet_formation_tester_top_tb.vhd"]"\
# ]
# add_files -norecurse -fileset $obj $files

# # Set 'sim_1' fileset file properties for remote files
# set file "$origin_dir/sims/packet_formation_tester_top_tb.vhd"
# set file [file normalize $file]
# set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
# set_property "file_type" "VHDL" $file_obj


# Set 'sim_1' fileset file properties for local files
# None

# Set 'sim_1' fileset properties
# set obj [get_filesets sim_1]
# set_property "top" "packet_formation_tester_top_tb" $obj
# set_property "transport_int_delay" "0" $obj
# set_property "transport_path_delay" "0" $obj
# set_property "xelab.nosort" "1" $obj
# set_property "xelab.unifast" "" $obj

# Create 'synth_1' run (if not found)
if {[string equal [get_runs -quiet synth_1] ""]} {
  create_run -name synth_1 -part $thepart -flow {Vivado Synthesis 2016} -strategy "Vivado Synthesis Defaults" -constrset constrs_1
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs synth_1]
  set_property flow "Vivado Synthesis 2016" [get_runs synth_1]
}
set obj [get_runs synth_1]
set_property "part" "$thepart" $obj

# set the current synth run
current_run -synthesis [get_runs synth_1]

# Create 'impl_1' run (if not found)
if {[string equal [get_runs -quiet impl_1] ""]} {
  create_run -name impl_1 -part $thepart -flow {Vivado Implementation 2016} -strategy "Vivado Implementation Defaults" -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_1]
  set_property flow "Vivado Implementation 2016" [get_runs impl_1]
}
set obj [get_runs impl_1]
set_property "part" $thepart $obj
set_property "steps.write_bitstream.args.readback_file" "0" $obj
set_property "steps.write_bitstream.args.verbose" "0" $obj

# set the current impl run
current_run -implementation [get_runs impl_1]

puts "INFO: Project created:$projectname"
